%YAML 1.2
---
name: Help
scope: text.hyperhelp.help
first_line_match: '^%hyperhelp'
hidden: true
variables:
  key_binding: '<[^> ]*>\t?>?'
  code_markup: '`[^`]*`'
  block_markup: '^\s*```\s*$'
  hyperlink: '(\|)([^|\t\* ][^|\* ]*)(\|)'
  anchor: '(\*)([^*\|\t ][^*\| ]*)(\*)'
  hidden_anchor: '(\*\|)([^\*\|\t ][^*\| ]*)(\|\*)'
  separator: '(?:\+?([=-])\1{3,}(\+|\|)?)|(?:\|\t)|(?:\t\|)'
  author_header: '^(%)(hyperhelp)'
  header_keypair: '\b([a-z]+)(=)(")([^"]*)(")'
  expanded_header: '^{{anchor}}\s+(.*)\s{2,}(.*)'

contexts:
  main:
    - match: '{{author_header}}'
      captures:
        1: punctuation.definition.directive
        2: keyword.other.directive meta.directive
      push: header_keypairs
    - match: '{{expanded_header}}'
      captures:
        1: string.unquoted
        2: string.unquoted meta.anchor
        3: string.unquoted
        4: storage.type.class meta.title
        5: variable.language meta.date
      set: body
    - match: ''
      set: body
  header_keypairs:
    - match: '{{header_keypair}}'
      captures:
        1: storage.type.class meta.key
        2: keyword.operator
        3: string.quoted.double
        4: string.quoted.double meta.value
        5: string.quoted.double
    - match: '\S'
      scope: invalid.illegal.hyperhelp.header
    - match: '$'
      set: main
  body:
    - match: '{{key_binding}}'
      scope: variable.language meta.keybind
    - match: '{{code_markup}}'
      scope: markup.raw meta.code
    - match: '{{block_markup}}'
      push: code_block
    - match: '{{hyperlink}}'
      captures:
        1: storage punctuation.link.begin
        2: storage meta.link
        3: storage punctuation.link.end
    - match: '{{anchor}}'
      captures:
        1: string.unquoted punctuation.anchor.begin
        2: string.unquoted meta.anchor
        3: string.unquoted punctuation.anchor.end
    - match: '{{hidden_anchor}}'
      captures:
        1: string.unquoted punctuation.anchor.begin
        2: string.unquoted meta.anchor.hidden
        3: string.unquoted punctuation.anchor.end
    - match: '{{separator}}'
      scope: storage.what meta.separator
  code_block:
    - meta_scope: markup.raw meta.code
    - match: '{{block_markup}}'
      pop: true